#version 450

layout(binding = 0) buffer vecA {
    float vecAData[];
};

layout(binding = 1) buffer vecB {
    float vecBData[];
};

layout(binding = 2) buffer vecOut {
    float vecOutData[];
};

layout(binding = 3) uniform vecSize {
    int size;
};

layout(local_size_x = 1024, local_size_y = 1, local_size_z = 1) in;
void main() {
    uint index = gl_GlobalInvocationID.x;
    /*if (index < size) {
        vecOutData[index] = vecAData[index] + vecBData[index];
    }*/
    for (uint idx = gl_GlobalInvocationID.x; idx < size; idx += 1024) {
        vecOutData[idx] = vecAData[idx] + vecBData[idx];
    }
}